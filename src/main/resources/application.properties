#
# Event Hubs Kafka settings
#
eh.namespace=[your-event-hubb-namescape]
kafka.bootstrap.servers=${eh.namespace}.servicebus.windows.net:9093
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=PLAIN
kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="[your connection string]";

#
# Event Hubs Schema Registry settings
#
eh.schema.registry.url=https://${eh.namespace}.servicebus.windows.net
eh.schema.group=my-schema-group
eh.auto.register.schemas=true
eh.avro.serializer=com.microsoft.azure.schemaregistry.kafka.avro.KafkaAvroSerializerExtended
eh.avro.deserializer=com.microsoft.azure.schemaregistry.kafka.avro.KafkaAvroDeserializerExtended
eh.tenant.id=[tenant-id]
## eh.client.id=[client-id] - with "Schema Registry Contributor" role assignment
eh.client.id=[client-id]
eh.client.secret=[client-secret]

#
# Outgoing movies
#
# set the connector for the outgoing channel to `smallrye-kafka`
mp.messaging.outgoing.movies.connector=smallrye-kafka
# set the topic name for the channel
mp.messaging.outgoing.movies.topic=movies
mp.messaging.outgoing.movies.value.serializer=${eh.avro.serializer}
# schema registry
mp.messaging.outgoing.movies.schema.registry.url=${eh.schema.registry.url}
mp.messaging.outgoing.movies.schema.group=${eh.schema.group}
mp.messaging.outgoing.movies.auto.register.schemas=${eh.auto.register.schemas}

#
# Incoming movies
#
# automatically register the schema with the registry, if not present
#mp.messaging.outgoing.movies.apicurio.registry.auto-register=true
# set the connector for the incoming channel to `smallrye-kafka`
mp.messaging.incoming.movies-from-kafka.connector=smallrye-kafka
# set the topic name for the channel
mp.messaging.incoming.movies-from-kafka.topic=movies
mp.messaging.incoming.movies-from-kafka.value.deserializer=${eh.avro.deserializer}
# disable auto-commit, Reactive Messaging handles it itself
mp.messaging.incoming.movies-from-kafka.enable.auto.commit=false
mp.messaging.incoming.movies-from-kafka.auto.offset.reset=earliest
# schema registry
mp.messaging.incoming.movies-from-kafka.schema.registry.url=${eh.schema.registry.url}
mp.messaging.incoming.movies-from-kafka.schema.group=${eh.schema.group}
mp.messaging.incoming.movies-from-kafka.specific.avro.reader=true

# For local test kafka broker
#kafka.bootstrap.servers=PLAINTEXT://localhost:9092

# For local test apicurio schema registry
#mp.messaging.connector.smallrye-kafka.schema.registry.url=http://localhost:8081
#mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8081/apis/registry/v2

# used by producer only
#schema.group=my-schema-group
